version: '3'

services:
  backend:
    restart: always
    build: ./backend
    volumes:
      - static_volume:/web/app/files/static  # <-- bind the static volume
      - media_volume:/web/app/files/media  # <-- bind the media volume
    env_file: 
      - ./env/dev/backend.env
      - ./env/dev/db.env
    environment:
      - ENV=PROD
    networks:
      - nginx_network
      - database_network
    command: "/web/app/start_django.sh"
    depends_on:
      - database

  nginx:
    restart: always 
    build: ./server
    ports:
      - 80:80
    volumes:
      - static_volume:/web/app/files/static  # <-- bind the static volume
      - media_volume:/web/app/files/media  # <-- bind the media volume
    networks:
      - nginx_network
    env_file: 
      - ./env/dev/server.env
    command: /bin/bash -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/project.template > /etc/nginx/conf.d/project.conf && cat /etc/nginx/conf.d/project.conf && exec nginx -g 'daemon off;'"

  database:
    restart: always
    image: postgres:12
    env_file: 
      - ./env/dev/db.env
    volumes:
      - database_data:/var/lib/postgresql/data/
    networks:
      - database_network

networks: 
  nginx_network:
    driver: bridge
  database_network:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  database_data:
